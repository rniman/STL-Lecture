==================================================
소스.cpp , 저장시간: 2023-04-27 목요일 오후 3:04:56
==================================================
//------------------------------------------------------------
// 2023. 4. 27 목56								(9주 1일)
//------------------------------------------------------------
// list
//------------------------------------------------------------
#include <iostream>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 파일 "리스트설명.txt"의 단어를 list<String>으로 읽어와라.
// 읽은 단어를 화면에 출려하라.

//-------
int main()
//-------
{
	//merge는 두 개의 정렬된 목록을 하나로 병합할 때 사용

	list<int> cont1{ 7,3,5,9,1 };
	list<int> cont2{ 8,2,6,4,0 };

	cont1.merge(cont2);
	
	for (int n : cont1)
	{
		cout << n << ' ';
	}
	cout << endl;

	for (int n : cont2)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}



==================================================
소스.cpp , 저장시간: 2023-04-27 목요일 오후 3:05:12
==================================================
//------------------------------------------------------------
// 2023. 4. 27 목56								(9주 1일)
//------------------------------------------------------------
// list
//------------------------------------------------------------
#include <iostream>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 파일 "리스트설명.txt"의 단어를 list<String>으로 읽어와라.
// 읽은 단어를 화면에 출려하라.

//-------
int main()
//-------
{
	//merge는 두 개의 정렬된 목록을 하나로 병합할 때 사용

	list<int> cont1{ 7,3,5,9,1 };
	list<int> cont2{ 8,2,6,4,0 };

	cont1.sort();
	cont2.sort();

	cont1.merge(cont2);
	
	for (int n : cont1)
	{
		cout << n << ' ';
	}
	cout << endl;

	for (int n : cont2)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}



==================================================
소스.cpp , 저장시간: 2023-04-27 목요일 오후 3:05:37
==================================================
//------------------------------------------------------------
// 2023. 4. 27 목56								(9주 1일)
//------------------------------------------------------------
// list
//------------------------------------------------------------
#include <iostream>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 파일 "리스트설명.txt"의 단어를 list<String>으로 읽어와라.
// 읽은 단어를 화면에 출려하라.

//-------
int main()
//-------
{
	//merge는 두 개의 정렬된 목록을 하나로 병합할 때 사용
	//합쳐진 리스트는 정렬이 됨을 보장

	list<int> cont1{ 7,3,5,9,1 };
	list<int> cont2{ 8,2,6,4,0 };

	cont1.sort();
	cont2.sort();

	cont1.merge(cont2);
	
	for (int n : cont1)
	{
		cout << n << ' ';
	}
	cout << endl;

	for (int n : cont2)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}



==================================================
소스.cpp , 저장시간: 2023-04-27 목요일 오후 3:18:21
==================================================
//------------------------------------------------------------
// 2023. 4. 27 목56								(9주 1일)
//------------------------------------------------------------
// forward_list 
// It is intended that forward_list have zero space or time overhead
// relative to a hand - written C - style singly linked list.
// Features that would conflict with that goal have been omitted.
//------------------------------------------------------------
#include <iostream>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{
	//forward_list 는 size조차 지원하지 않는다.

	save("소스.cpp");
}
