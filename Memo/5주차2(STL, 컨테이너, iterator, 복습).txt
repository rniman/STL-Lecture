==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오전 10:28:40
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// STL 시작 - 표준문서(컨테이너), cppreference에서 컨테이너 공부해 보기 
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	array<int, 10> a{ 1 , 3, 5, 7 ,9, 2, 4, 6, 8, 10 };

	cout << a.front() << endl;
	
	//레퍼런스를 리턴하므로 수정이 된다.
	a.front() = 123;
	cout << a.front() << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오전 10:40:21
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	array<int, 10> a{ 1 , 3, 5, 7 ,9, 2, 4, 6, 8, 10 };

	// STL의 컨테이너의 원소에 access
	// 모든 값을 출력하기

	array<int, 10>::iterator p = a.begin();
	cout << *p << endl;

	save("소스.cpp");
}
==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오후 12:05:27
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	array<int, 10> a{ 1 , 3, 5, 7 ,9, 2, 4, 6, 8, 10 };

	cout << sizeof a << endl;

	// STL의 컨테이너의 원소에 access
	// 모든 값을 출력하기
	
	//1
	array<int, 10>::iterator p = a.begin();
	while (p != a.end())
	{
		cout << *p << endl;
		++p;
	}
	
	//2
	for (auto i = a.begin(); i != a.end(); ++i)
	{
		cout << *i << endl;
	}

	//3
	for (int i = 0; i < a.size(); ++i)
	{
		cout << a[i] << endl;
	}

	//4
	for (int n: a)
	{
		cout << n << endl;
	}

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오후 12:08:42
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	array<int, 10> a{ 1 , 3, 5, 7 ,9, 2, 4, 6, 8, 10 };

	cout << sizeof a << endl;

	// STL의 컨테이너의 원소에 access
	// 모든 값을 출력하기

	for (int& n: a)	//신텍스 슈가 ㅣ 컴파일러가 비긴 엔드로 돌림
	{
		cout <<  (n *= 10) << endl;	//수정된다.
	}
	

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오후 12:15:26
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	array<int, 10> a{ 1 , 3, 5, 7 ,9, 2, 4, 6, 8, 10 };

	// STL의 컨테이너의 원소에 access
	// 모든 값을 출력하기(거꾸로)			 ++p
	for (auto p = a.rbegin(); p != a.rend(); p.operator++())
	{
		cout << *p << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오후 12:34:38
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	//관찰 = true;

	// [문제] 파일 "소스.cpp"에 있는 단어 30개를 a로 읽어라
	array<String, 30> a;

	ifstream in{ "소스.cpp" };

	if (!in)
	{
		cout << "소스.cpp를 열지 못했습니다." << endl;
		return 0;
	}

	for (int i = 0; i < 30; ++i)
	{
		in >> a[i];
	}

	// a의 내용을 모두 출력
	for (String& s : a)
	{
		cout << s << endl;
	}

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오후 12:40:51
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include <algorithm>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	//관찰 = true;

	array<String, 30> a;

	ifstream in{ "소스.cpp" };

	if (!in)
	{
		cout << "소스.cpp를 열지 못했습니다." << endl;
		return 0;
	}

	for (int i = 0; i < 30; ++i)
	{
		in >> a[i];
	}

	// a의 길이 기준 오름차순으로 a를 정렬하라
	sort(a.begin(), a.end(), [](const String& a, const String& b) {
		return a.size() < b.size();
		});

	// a의 내용을 모두 출력
	for (const String& s : a)
	{
		cout << s << endl;
	}

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-04 화요일 오후 12:58:00
==================================================
//------------------------------------------------------------
// 2023. 4. 3 월56								(5주 2일)
//------------------------------------------------------------
// Sequence container - array
//------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include <algorithm>
#include "save.h"
#include "String.h"

using namespace std;

extern bool 관찰;

//-------
int main()
//-------
{	
	// [문제] 키보드에서 입력한 int를 10개만 array를 사용하여 저장하라.
	// 합계를 화면에 출력하라.
	array<int, 10> a;

	for (int& i : a)
	{
		cin >> i;
	}
	cin.clear();
	
	int sum = *a.begin();
	cout << *a.begin();
	for (auto i = a.begin() + 1; i!= a.end(); ++i)
	{
		cout << " + " << *i;
		sum += *i;
	}
	cout << " = " << sum << endl;

	save("소스.cpp");
}