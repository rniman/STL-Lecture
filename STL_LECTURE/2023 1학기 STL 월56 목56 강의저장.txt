

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 1:56:27
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] "소스.cpp"의 영문자만 (대문자는 소문자로 바꿔) vector<char> 저장하라.
// 각 문자의 개수를 다음과 같이 출력하라.
// a - 10
// b - 3

//-------
int main()
//-------
{	
	vector<char> v;
	v.reserve(500);
	
	ifstream in{ "소스.cpp" };
	char c;
	while (in >> c)
	{
		if (isalpha(c))
		{
			if (isupper(c))
				c = tolower(c);
			v.push_back(c);
		}
	}

	for (char c = 'a'; c <= 'z'; ++c)
	{
		cout << c << " - ";
		cout << count(v.begin(), v.end(), c) << endl;
	}

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 2:10:51
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <fstream>
#include <string>
#include <algorithm>
#include <filesystem>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] "소스.cpp"의 영문자만 (대문자는 소문자로 바꿔) vector<char> 저장하라.
// 각 문자의 개수를 다음과 같이 출력하라.
// a - 10
// b - 3

//-------
int main()
//-------
{	
	vector<char> v;
	
	string fname{ "소스.cpp" };
	ifstream in{ fname };
	if (!in)
	{
		cout << "파일 열기 실패";
		return 0;
	}

	auto fileSize = filesystem::file_size(fname);
	cout << fname << " 파일 크기 - " << fileSize << endl;
	
	v.reserve(fileSize);
	cout << "백터의 용량 - " << v.capacity() << endl;

	char c;
	while (in >> c)
	{
		if (isalpha(c))
		{
			v.push_back(tolower(c));
		}
	}

	cout << fname << "에 있는 알파벳 개수 - " << v.size() << endl;

	array<int, 26> alphaNum{};
	for (char c : v)
	{
		++alphaNum[c - 'a'];
	}

	for (int i = 0; i < alphaNum.size(); ++i)
	{
		cout << static_cast<char>('a' + i) << " - " << alphaNum[i] << endl;
	}
	
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 2:16:16
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <fstream>
#include <string>
#include <algorithm>
#include <filesystem>
#include <array>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;



//-------
int main()
//-------
{	
	vector<char> v;
	
	string fname{ "소스.cpp" };
	ifstream in{ fname };
	if (!in)
	{
		cout << "파일 열기 실패";
		return 0;
	}

	auto fileSize = filesystem::file_size(fname);
	cout << fname << " 파일 크기 - " << fileSize << endl;
	
	v.reserve(fileSize);
	cout << "백터의 용량 - " << v.capacity() << endl;

	char c;
	while (in >> c)
	{
		if (isalpha(c))
		{
			v.push_back(tolower(c));
		}
	}

	cout << fname << "에 있는 알파벳 개수 - " << v.size() << endl;

	array<int, 26> alphaNum{};
	for (char c : v)
	{
		++alphaNum[c - 'a'];
	}

	for (int i = 0; i < alphaNum.size(); ++i)
	{
		cout << static_cast<char>('a' + i) << " - " << alphaNum[i] << endl;
	}
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 2:43:30
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <algorithm>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;



//-------
int main()
//-------
{	
	vector<int> v{ 1,2,3,4,5 };

	// [문제] v에서 3을 지워라. -> {1, 2, 4, 5}
	// 알고리즘 remove를 사용하면 된다.
	vector<int>::iterator p = remove(v.begin(), v.end(), 3);

	// 실제 size조정은 벡터만 할 수 있다.
	v.erase(p, v.end());

	for (int i = 0; i < v.size(); ++i)
	{
		cout << v[i] << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 2:57:19
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;



//-------
int main()
//-------
{	
	vector<int> v(100);
	
	iota(v.begin(), v.end(), 1);

	// [문제] v에서 짝수를 제거 하라
	// remove_if 함수를 사용하면 된다
	//조건:predcated?
	vector<int>::iterator p = remove_if(v.begin(), v.end(), [](int a) {
		return !(a & 1);
		});

	v.erase(p, v.end());

	for (int n : v)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 2:58:00
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;



//-------
int main()
//-------
{	
	vector<int> v(100);
	
	iota(v.begin(), v.end(), 1);

	// [문제] v에서 짝수를 제거 하라
	// remove_if 함수를 사용하면 된다
	//조건:predcated?

	// erase-remove idiom(짝)
	vector<int>::iterator p = remove_if(v.begin(), v.end(), [](int a) {
		return !(a & 1);
		});

	v.erase(p, v.end());

	for (int n : v)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-13 목요일 오후 3:04:14
==================================================
//------------------------------------------------------------
// 2023. 4. 13 목56								(7주 1일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;



//-------
int main()
//-------
{	
	vector<int> v(100);
	
	iota(v.begin(), v.end(), 1);

	// [문제] v에서 짝수를 제거 하라
	// remove_if 함수를 사용하면 된다
	//조건:predcated?

	// erase-remove idiom(짝) --> C++20부터는 전역함수 erase_if/erase를 사용
	// erase는 string, vector, deque에서만 제공
	// erase_if는 string, vector에서만 제공
	erase_if(v, [](int a) {
		return !(a & 1);
		});
	
	//vector<int>::iterator p = remove_if(v.begin(), v.end(), [](int a) {
	//	return !(a & 1);
	//	});

	//v.erase(p, v.end());

	for (int n : v)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}