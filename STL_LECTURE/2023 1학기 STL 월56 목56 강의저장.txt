

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 1:46:11
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <algorithm>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	관찰 = true;
	vector<String> v{ "1", "2", "3", "4", "5" };
	
	관찰 = false;
	// [문제] v에서 "3"을 제거하라
	erase(v, "3");

	for (String& s : v)
	{
		cout << s << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:03:53
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	vector<String> v{ "1", "2", "4", "5" };

	// [문제] v의 "2"와 "4"사이에 "3"을 삽입(insert)하라.
	
	//v.insert(v.begin() + 2, "3");
	v.insert(v.begin() + 2, v.begin(), v.end());
	//v.insert(v.begin() + 1, 3, "3");
	
	for (String& str : v)
	{
		cout << str << ' ';
	}
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:04:34
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	vector<String> v{ "1", "2", "4", "5" };

	// [문제] v의 "2"와 "4"사이에 "3"을 삽입(insert)하라.
	관찰 = true;
	v.insert(v.begin() + 2, "3");
	관찰 = false;

	for (String& str : v)
	{
		cout << str << ' ';
	}
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:17:03
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <list>
#include <iterator>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	list<String> v{ "1", "2", "4", "5" };
	// [문제] v의 "2"와 "4"사이에 "3"을 삽입(insert)하라.
	관찰 = true;
	auto p = v.begin();
	advance(p, 2);
	v.insert(p, "3");
	관찰 = false;

	for (String& str : v)
	{
		cout << str << ' ';
	}
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:17:57
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <list>
#include <iterator>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	list<String> v{ "1", "2", "4", "5" };
	// [문제] v의 "2"와 "4"사이에 "3"을 삽입(insert)하라.
	관찰 = true;
	auto p = v.begin();
	advance(p, 2);
	v.insert(p, "3");
	v.emplace(p, "3");
	관찰 = false;

	for (String& str : v)
	{
		cout << str << ' ';
	}
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:19:23
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - vector
// 1. 공간을 마련하고 사용 - reserve()
// 2. push_back보다 emplace_back을 사용
// 3. 중간에서 원소를 '자주' 삽입/삭제한다면 다른 컨테이너를 사용하라.
//------------------------------------------------------------
#include <iostream>
#include <vector>
#include <list>
#include <iterator>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	list<String> v{ "1", "2", "4", "5" };
	// [문제] v의 "2"와 "4"사이에 "3"을 삽입(insert)하라.
	관찰 = true;

	auto p = v.begin();
	advance(p, 2);
	
	v.insert(p, "3");
	v.emplace(p, "3");

	관찰 = false;

	for (String& str : v)
	{
		cout << str << ' ';
	}
	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:37:01
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	deque<int> d{ 1,2,3,4,5 };
	
	// d의 앞에 0을, 뒤에 6을 추가하라.
	d.push_front(0);
	d.push_back(6);

	for (int n : d)
	{
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:39:10
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	deque<int> d{ 1,2,3,4,5 };
	
	// d의 앞에 0을, 뒤에 6을 추가하라.
	d.push_front(0);
	d.push_back(6);

	for (int i = 0; i < d.size(); ++i)
	{
		cout << d[i] << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:39:49
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	deque<int> d{ 1,2,3,4,5 };
	
	// d의 앞에 0을, 뒤에 6을 추가하라.
	d.push_front(0);
	d.push_back(6);

	//deque은 contiguous하지않다
	for (int i = 0; i < d.size(); ++i)
	{
		cout << d[i] << ' ';
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 2:45:45
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include <vector>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

//-------
int main()
//-------
{	
	vector<int>v{ 0,1,2,3,4,5,6 };
	// [문제] v의 각 원소가 저장된 메모리 주소를 출력하라
	for (int i = 0; i < v.size(); ++i)
	{
		cout << addressof(v[i]) << endl;
	}
	cout << endl;
	deque<int> d{ 1,2,3,4,5,6,7,8,9,10 };

	//deque은 contiguous하지않다
	for (int i = 0; i < d.size(); ++i)
	{
		cout << addressof(d[i]) << endl;
	}
	cout << endl;

	save("소스.cpp");
}

==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 3:01:00
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include <vector>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 어느 컨테이너가 더 많은 int를 저장할 수 있나? container benchmark
// x86 모드에서 실행

//-------
int main()
//-------
{
	save("소스.cpp");

	vector<int> v;

	try {
		while (true)
		{
			v.push_back(1);
		}
	}
	catch (exception& e) {
		cout << "메모리 부족 - " << e.what() << endl;
		cout << "v의 원소 수 -" << v.size() << endl;
	}
}



==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 3:01:31
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include <vector>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 어느 컨테이너가 더 많은 int를 저장할 수 있나? container benchmark
// x86 모드에서 실행

//-------
int main()
//-------
{
	save("소스.cpp");

	//vector<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 136216567
	
	deque<int> v;

	try {
		while (true)
		{
			v.push_back(1);
		}
	}
	catch (exception& e) {
		cout << "메모리 부족 - " << e.what() << endl;
		cout << "v의 원소 수 -" << v.size() << endl;
	}
}



==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 3:03:16
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include <vector>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 어느 컨테이너가 더 많은 int를 저장할 수 있나? container benchmark
// x86 모드에서 실행

//-------
int main()
//-------
{
	save("소스.cpp");

	//vector<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 1'3621'6567
	
	//deque<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 2'6843'5452

	list<int> v;

	try {
		while (true)
		{
			v.push_back(1);
		}
	}
	catch (exception& e) {
		cout << "메모리 부족 - " << e.what() << endl;
		cout << "v의 원소 수 -" << v.size() << endl;
	}
}



==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 3:07:22
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
// - vector와 list의 중간형태인 자료구조
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include <vector>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 어느 컨테이너가 더 많은 int를 저장할 수 있나? container benchmark
// x86 모드에서 실행

//-------
int main()
//-------
{
	save("소스.cpp");

	//vector<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 1'3621'6567
	
	//deque<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 2'6843'5452

	//list<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 8413'5392

}



==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 3:07:47
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - deque
// - vector와 list의 중간형태인 자료구조
//------------------------------------------------------------
#include <iostream>
#include <deque>
#include <vector>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 어느 컨테이너가 더 많은 int를 저장할 수 있나? container benchmark
// x86 모드에서 실행

//-------
int main()
//-------
{
	save("소스.cpp");

	//vector<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 1'3621'6567
	
	//deque<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 2'6843'5452

	//list<int> v;
	//메모리 부족 - bad allocation
	//v의 원소 수 - 8413'5392

}



==================================================
소스.cpp , 저장시간: 2023-04-17 월요일 오후 3:16:23
==================================================
//------------------------------------------------------------
// 2023. 4. 17 월56								(7주 2일)
// 4월 24일 월요일(8주 2일) - 중간시험
//------------------------------------------------------------
// Sequence container - list
//------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <list>
#include "save.h"
#include "String.h"

using namespace std;
extern bool 관찰;

// [문제] 파일 "리스트설명.txt"의 단어를 list<String>으로 읽어와라.
// 읽은 단어를 화면에 출려하라.

//-------
int main()
//-------
{
	ifstream in{ "리스트설명.txt" };

	if (!in)
	{
		cout << "파일 읽기 실패" << endl;
		return 0;
	}

	list<String> l;

	String s;
	while (in >> s)
	{
		l.push_back(s);
	}

	for (String& s : l)
	{
		cout << s << endl;
	}

	save("소스.cpp");
}

